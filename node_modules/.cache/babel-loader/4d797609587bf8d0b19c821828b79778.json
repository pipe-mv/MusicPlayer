{"ast":null,"code":"var _jsxFileName = \"/Users/pipemv/Desktop/final-project/src/components/SongLyric.js\";\n// import { SongTest } from \"./DataTes\";\nimport ReactPlayer from \"react-player\"; // import _ from \"lodash\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongLyric = _ref => {\n  let {\n    title,\n    lyric,\n    songYouTube,\n    favId\n  } = _ref;\n  console.log(favId); // const dispatch = useDispatch();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"console.log(\\\"item\\\", item); const \", (id, snippet = {}), \" = item; const \", thumbnails = {}, \" = snippet; const \", standard = {}, \" = thumbnails; return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: \"react-player\",\n          controls: true,\n          url: `https://www.youtube.com/watch?v=${id}` // url={songYouTube}\n          ,\n          width: \"30%\",\n          height: standard.height,\n          config: {\n            youtube: {\n              playerVars: {\n                showinfo: 1,\n                hl: \"en\"\n              }\n            },\n            file: {\n              tracks: [{\n                kind: \"subtitles\",\n                src: \"subs/subtitles.en.vtt\",\n                srcLang: \"en\",\n                default: true\n              }, {\n                kind: \"subtitles\",\n                src: \"subs/subtitles.ja.vtt\",\n                srcLang: \"ja\"\n              }, {\n                kind: \"subtitles\",\n                src: \"subs/subtitles.de.vtt\",\n                srcLang: \"de\"\n              }]\n            }\n          }\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), \"/* \", /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://www.youtube.com/watch?v=${id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              width: standard.width,\n              height: standard.height,\n              src: standard.url,\n              alt: `${title} `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this), \" */ ); })}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n        children: lyric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SongLyric;\nexport default SongLyric;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongLyric\");","map":{"version":3,"sources":["/Users/pipemv/Desktop/final-project/src/components/SongLyric.js"],"names":["ReactPlayer","SongLyric","title","lyric","songYouTube","favId","console","log","id","snippet","thumbnails","standard","height","youtube","playerVars","showinfo","hl","file","tracks","kind","src","srcLang","default","index","width","url"],"mappings":";AAAA;AACA,OAAOA,WAAP,MAAwB,cAAxB,C,CACA;;;;AAEA,MAAMC,SAAS,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,GAAyC;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAD0D,CAE1D;;AACA,sBACE;AAAA,4BACE;AAAA,yDAIYG,EAAE,EAAEC,OAAO,GAAG,EAJ1B,sBAKYC,UAAU,GAAG,EALzB,wBAMYC,QAAQ,GAAG,EANvB,0CASM;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACA,QAAC,WAAD;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,QAAQ,MAFV;AAIE,UAAA,GAAG,EAAG,mCAAkCH,EAAG,EAJ7C,CAKE;AALF;AAME,UAAA,KAAK,EAAC,KANR;AAOE,UAAA,MAAM,EAAEG,QAAQ,CAACC,MAPnB;AAQE,UAAA,MAAM,EAAE;AACNC,YAAAA,OAAO,EAAE;AACPC,cAAAA,UAAU,EAAE;AAAEC,gBAAAA,QAAQ,EAAE,CAAZ;AAAeC,gBAAAA,EAAE,EAAE;AAAnB;AADL,aADH;AAINC,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,CACN;AACEC,gBAAAA,IAAI,EAAE,WADR;AAEEC,gBAAAA,GAAG,EAAE,uBAFP;AAGEC,gBAAAA,OAAO,EAAE,IAHX;AAIEC,gBAAAA,OAAO,EAAE;AAJX,eADM,EAON;AACEH,gBAAAA,IAAI,EAAE,WADR;AAEEC,gBAAAA,GAAG,EAAE,uBAFP;AAGEC,gBAAAA,OAAO,EAAE;AAHX,eAPM,EAYN;AACEF,gBAAAA,IAAI,EAAE,WADR;AAEEC,gBAAAA,GAAG,EAAE,uBAFP;AAGEC,gBAAAA,OAAO,EAAE;AAHX,eAZM;AADJ;AAJA;AARV,WAGOb,EAHP;AAAA;AAAA;AAAA;AAAA;AADA,SAAqCe,KAArC;AAAA;AAAA;AAAA;AAAA,cATN,sBA6CS;AAAA,+BACD;AAAG,UAAA,IAAI,EAAG,mCAAkCf,EAAG,EAA/C;AAAA,kCACE;AAAA,mCACE;AACE,cAAA,KAAK,EAAEG,QAAQ,CAACa,KADlB;AAEE,cAAA,MAAM,EAAEb,QAAQ,CAACC,MAFnB;AAGE,cAAA,GAAG,EAAED,QAAQ,CAACc,GAHhB;AAIE,cAAA,GAAG,EAAG,GAAEvB,KAAM;AAJhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADC,SAASM,EAAT;AAAA;AAAA;AAAA;AAAA,cA7CT;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA+DE;AAAA,6BACE;AAAA,kBAAaL;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsED,CAzED;;KAAMF,S;AA2EN,eAAeA,SAAf","sourcesContent":["// import { SongTest } from \"./DataTes\";\nimport ReactPlayer from \"react-player\";\n// import _ from \"lodash\";\n\nconst SongLyric = ({ title, lyric, songYouTube, favId }) => {\n  console.log(favId);\n  // const dispatch = useDispatch();\n  return (\n    <div>\n      <div>\n      {/* {_.map(songYouTube.items, (item, index) => { */}\n        {/* {songYouTube[0].items.map((item, index) => { */}\n           console.log(\"item\", item);\n          const { id, snippet = {} } = item;\n          const { thumbnails = {} } = snippet;\n          const { standard = {} } = thumbnails;\n\n          return (\n            <div className='player-wrapper' key={index} >\n            <ReactPlayer\n              className=\"react-player\"\n              controls\n              key={id}\n              url={`https://www.youtube.com/watch?v=${id}`}\n              // url={songYouTube}\n              width='30%'\n              height={standard.height}\n              config={{\n                youtube: {\n                  playerVars: { showinfo: 1, hl: \"en\" },\n                },\n                file: {\n                  tracks: [\n                    {\n                      kind: \"subtitles\",\n                      src: \"subs/subtitles.en.vtt\",\n                      srcLang: \"en\",\n                      default: true,\n                    },\n                    {\n                      kind: \"subtitles\",\n                      src: \"subs/subtitles.ja.vtt\",\n                      srcLang: \"ja\",\n                    },\n                    {\n                      kind: \"subtitles\",\n                      src: \"subs/subtitles.de.vtt\",\n                      srcLang: \"de\",\n                    },\n                  ],\n                },\n              }}\n            />\n            </div>\n            /* <li key={id}>\n              <a href={`https://www.youtube.com/watch?v=${id}`}>\n                <p>\n                  <img\n                    width={standard.width}\n                    height={standard.height}\n                    src={standard.url}\n                    alt={`${title} `}\n                  />\n                </p>\n                <h3>{title}</h3>\n              </a>\n            </li> */\n          );\n        })}\n      </div>\n      {/* <VideoSong song={SongTest} /> */}\n      <div>\n        <blockquote>{lyric}</blockquote>\n      </div>\n      {/* <YoutubePlayer /> */}\n    </div>\n  );\n};\n\nexport default SongLyric;\n"]},"metadata":{},"sourceType":"module"}