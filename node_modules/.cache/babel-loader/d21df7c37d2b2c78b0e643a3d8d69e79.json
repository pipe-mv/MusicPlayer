{"ast":null,"code":"var _jsxFileName = \"/Users/pipemv/Desktop/final-project/src/components/SongLyric.js\";\n// import { SongTest } from \"./DataTes\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongLyric = _ref => {\n  let {\n    title,\n    lyric,\n    songYouTube,\n    favId\n  } = _ref;\n  console.log(favId); // const dispatch = useDispatch();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: _.map(songYouTube[0].items, (videoData, index) => {\n        _.map(videoData.items, (item, index) => {\n          /* {songYouTube[0].items.map((item, index) => { */\n          console.log(\"item\", item);\n          const {\n            id,\n            snippet = {}\n          } = item;\n          const {\n            thumbnails = {}\n          } = snippet;\n          const {\n            standard = {}\n          } = thumbnails;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n              className: \"react-player\",\n              controls: true,\n              url: `https://www.youtube.com/watch?v=${id}` // url={songYouTube}\n              ,\n              width: \"30%\",\n              height: standard.height,\n              config: {\n                youtube: {\n                  playerVars: {\n                    showinfo: 1,\n                    hl: \"en\"\n                  }\n                },\n                file: {\n                  tracks: [{\n                    kind: \"subtitles\",\n                    src: \"subs/subtitles.en.vtt\",\n                    srcLang: \"en\",\n                    default: true\n                  }, {\n                    kind: \"subtitles\",\n                    src: \"subs/subtitles.ja.vtt\",\n                    srcLang: \"ja\"\n                  }, {\n                    kind: \"subtitles\",\n                    src: \"subs/subtitles.de.vtt\",\n                    srcLang: \"de\"\n                  }]\n                }\n              }\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n          /* <li key={id}>\n          <a href={`https://www.youtube.com/watch?v=${id}`}>\n            <p>\n              <img\n                width={standard.width}\n                height={standard.height}\n                src={standard.url}\n                alt={`${title} `}\n              />\n            </p>\n            <h3>{title}</h3>\n          </a>\n          </li> */\n          ;\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n        children: lyric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SongLyric;\nexport default SongLyric;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongLyric\");","map":{"version":3,"sources":["/Users/pipemv/Desktop/final-project/src/components/SongLyric.js"],"names":["ReactPlayer","_","SongLyric","title","lyric","songYouTube","favId","console","log","map","items","videoData","index","item","id","snippet","thumbnails","standard","height","youtube","playerVars","showinfo","hl","file","tracks","kind","src","srcLang","default"],"mappings":";AAAA;AACA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,SAAS,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,GAAyC;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAD0D,CAE1D;;AACA,sBACE;AAAA,4BACE;AAAA,gBACGL,CAAC,CAACQ,GAAF,CAAMJ,WAAW,CAAC,CAAD,CAAX,CAAeK,KAArB,EAA4B,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACjDX,QAAAA,CAAC,CAACQ,GAAF,CAAME,SAAS,CAACD,KAAhB,EAAuB,CAACG,IAAD,EAAOD,KAAP,KAAiB;AACtC;AACCL,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBK,IAApB;AACD,gBAAM;AAAEC,YAAAA,EAAF;AAAMC,YAAAA,OAAO,GAAG;AAAhB,cAAuBF,IAA7B;AACA,gBAAM;AAAEG,YAAAA,UAAU,GAAG;AAAf,cAAsBD,OAA5B;AACA,gBAAM;AAAEE,YAAAA,QAAQ,GAAG;AAAb,cAAoBD,UAA1B;AAEA,8BACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,SAAS,EAAC,cADZ;AAEE,cAAA,QAAQ,MAFV;AAIE,cAAA,GAAG,EAAG,mCAAkCF,EAAG,EAJ7C,CAKE;AALF;AAME,cAAA,KAAK,EAAC,KANR;AAOE,cAAA,MAAM,EAAEG,QAAQ,CAACC,MAPnB;AAQE,cAAA,MAAM,EAAE;AACNC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,UAAU,EAAE;AAAEC,oBAAAA,QAAQ,EAAE,CAAZ;AAAeC,oBAAAA,EAAE,EAAE;AAAnB;AADL,iBADH;AAINC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,MAAM,EAAE,CACN;AACEC,oBAAAA,IAAI,EAAE,WADR;AAEEC,oBAAAA,GAAG,EAAE,uBAFP;AAGEC,oBAAAA,OAAO,EAAE,IAHX;AAIEC,oBAAAA,OAAO,EAAE;AAJX,mBADM,EAON;AACEH,oBAAAA,IAAI,EAAE,WADR;AAEEC,oBAAAA,GAAG,EAAE,uBAFP;AAGEC,oBAAAA,OAAO,EAAE;AAHX,mBAPM,EAYN;AACEF,oBAAAA,IAAI,EAAE,WADR;AAEEC,oBAAAA,GAAG,EAAE,uBAFP;AAGEC,oBAAAA,OAAO,EAAE;AAHX,mBAZM;AADJ;AAJA;AARV,eAGOb,EAHP;AAAA;AAAA;AAAA;AAAA;AADF,aAAqCF,KAArC;AAAA;AAAA;AAAA;AAAA;AAoCA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDY;AAmDD,SA1DD;AA2DD,OA5DA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAiEE;AAAA,6BACE;AAAA,kBAAaR;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwED,CA3ED;;KAAMF,S;AA6EN,eAAeA,SAAf","sourcesContent":["// import { SongTest } from \"./DataTes\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\n\nconst SongLyric = ({ title, lyric, songYouTube, favId }) => {\n  console.log(favId);\n  // const dispatch = useDispatch();\n  return (\n    <div>\n      <div>\n        {_.map(songYouTube[0].items, (videoData, index) => {\n          _.map(videoData.items, (item, index) => {\n            /* {songYouTube[0].items.map((item, index) => { */\n             console.log(\"item\", item); \n            const { id, snippet = {} } = item;\n            const { thumbnails = {} } = snippet;\n            const { standard = {} } = thumbnails;\n\n            return (\n              <div className=\"player-wrapper\" key={index}>\n                <ReactPlayer\n                  className=\"react-player\"\n                  controls\n                  key={id}\n                  url={`https://www.youtube.com/watch?v=${id}`}\n                  // url={songYouTube}\n                  width=\"30%\"\n                  height={standard.height}\n                  config={{\n                    youtube: {\n                      playerVars: { showinfo: 1, hl: \"en\" },\n                    },\n                    file: {\n                      tracks: [\n                        {\n                          kind: \"subtitles\",\n                          src: \"subs/subtitles.en.vtt\",\n                          srcLang: \"en\",\n                          default: true,\n                        },\n                        {\n                          kind: \"subtitles\",\n                          src: \"subs/subtitles.ja.vtt\",\n                          srcLang: \"ja\",\n                        },\n                        {\n                          kind: \"subtitles\",\n                          src: \"subs/subtitles.de.vtt\",\n                          srcLang: \"de\",\n                        },\n                      ],\n                    },\n                  }}\n                />\n              </div>\n              /* <li key={id}>\n              <a href={`https://www.youtube.com/watch?v=${id}`}>\n                <p>\n                  <img\n                    width={standard.width}\n                    height={standard.height}\n                    src={standard.url}\n                    alt={`${title} `}\n                  />\n                </p>\n                <h3>{title}</h3>\n              </a>\n            </li> */\n            );\n          });\n        })}\n      </div>\n      {/* <VideoSong song={SongTest} /> */}\n      <div>\n        <blockquote>{lyric}</blockquote>\n      </div>\n      {/* <YoutubePlayer /> */}\n    </div>\n  );\n};\n\nexport default SongLyric;\n"]},"metadata":{},"sourceType":"module"}