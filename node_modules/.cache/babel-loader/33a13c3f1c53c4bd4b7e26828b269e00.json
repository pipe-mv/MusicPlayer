{"ast":null,"code":"var _jsxFileName = \"/Users/pipemv/Desktop/final-project/src/components/SongLyric.js\";\n// import { SongTest } from \"./DataTes\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongLyric = _ref => {\n  let {\n    title,\n    lyric,\n    songYouTube,\n    favId\n  } = _ref;\n  console.log(songYouTube, favId); // const dispatch = useDispatch();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: _.map(songYouTube[0].items, (item, index) => {\n        /* _.map(videoData.items, (item, index) => { */\n\n        /* {songYouTube[0].items.map((item, index) => { */\n        console.log(\"item\", item);\n        const {\n          id = {},\n          snippet = {}\n        } = item;\n        const {\n          kind,\n          videoId\n        } = id;\n        const {\n          thumbnails = {}\n        } = snippet;\n        const {\n          standard = {}\n        } = thumbnails;\n        console.log(\"item id\", id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            className: \"react-player\",\n            controls: true,\n            url: `https://www.youtube.com/watch?v=${id}` // url={songYouTube}\n            ,\n            width: \"30%\",\n            height: standard.height,\n            config: {\n              youtube: {\n                playerVars: {\n                  showinfo: 1,\n                  hl: \"en\"\n                }\n              },\n              file: {\n                tracks: [{\n                  kind: \"subtitles\",\n                  src: \"subs/subtitles.en.vtt\",\n                  srcLang: \"en\",\n                  default: true\n                }, {\n                  kind: \"subtitles\",\n                  src: \"subs/subtitles.ja.vtt\",\n                  srcLang: \"ja\"\n                }, {\n                  kind: \"subtitles\",\n                  src: \"subs/subtitles.de.vtt\",\n                  srcLang: \"de\"\n                }]\n              }\n            }\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)\n        /* <li key={id}>\n        <a href={`https://www.youtube.com/watch?v=${id}`}>\n          <p>\n            <img\n              width={standard.width}\n              height={standard.height}\n              src={standard.url}\n              alt={`${title} `}\n            />\n          </p>\n          <h3>{title}</h3>\n        </a>\n        </li> */\n        ;\n        /* }); */\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n        children: lyric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SongLyric;\nexport default SongLyric;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongLyric\");","map":{"version":3,"sources":["/Users/pipemv/Desktop/final-project/src/components/SongLyric.js"],"names":["ReactPlayer","_","SongLyric","title","lyric","songYouTube","favId","console","log","map","items","item","index","id","snippet","kind","videoId","thumbnails","standard","height","youtube","playerVars","showinfo","hl","file","tracks","src","srcLang","default"],"mappings":";AAAA;AACA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,SAAS,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,GAAyC;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAwBC,KAAxB,EAD0D,CAE1D;;AACA,sBACE;AAAA,4BACE;AAAA,gBACGL,CAAC,CAACQ,GAAF,CAAMJ,WAAW,CAAC,CAAD,CAAX,CAAeK,KAArB,EAA4B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5C;;AACE;AACCL,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,IAApB;AACD,cAAM;AAAEE,UAAAA,EAAE,GAAG,EAAP;AAAWC,UAAAA,OAAO,GAAG;AAArB,YAA4BH,IAAlC;AACA,cAAM;AAACI,UAAAA,IAAD;AAAMC,UAAAA;AAAN,YAAiBH,EAAvB;AACA,cAAM;AAAEI,UAAAA,UAAU,GAAG;AAAf,YAAsBH,OAA5B;AACA,cAAM;AAAEI,UAAAA,QAAQ,GAAG;AAAb,YAAoBD,UAA1B;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,EAAvB;AACA,4BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,QAAQ,MAFV;AAIE,YAAA,GAAG,EAAG,mCAAkCA,EAAG,EAJ7C,CAKE;AALF;AAME,YAAA,KAAK,EAAC,KANR;AAOE,YAAA,MAAM,EAAEK,QAAQ,CAACC,MAPnB;AAQE,YAAA,MAAM,EAAE;AACNC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AAAEC,kBAAAA,QAAQ,EAAE,CAAZ;AAAeC,kBAAAA,EAAE,EAAE;AAAnB;AADL,eADH;AAINC,cAAAA,IAAI,EAAE;AACJC,gBAAAA,MAAM,EAAE,CACN;AACEV,kBAAAA,IAAI,EAAE,WADR;AAEEW,kBAAAA,GAAG,EAAE,uBAFP;AAGEC,kBAAAA,OAAO,EAAE,IAHX;AAIEC,kBAAAA,OAAO,EAAE;AAJX,iBADM,EAON;AACEb,kBAAAA,IAAI,EAAE,WADR;AAEEW,kBAAAA,GAAG,EAAE,uBAFP;AAGEC,kBAAAA,OAAO,EAAE;AAHX,iBAPM,EAYN;AACEZ,kBAAAA,IAAI,EAAE,WADR;AAEEW,kBAAAA,GAAG,EAAE,uBAFP;AAGEC,kBAAAA,OAAO,EAAE;AAHX,iBAZM;AADJ;AAJA;AARV,aAGOd,EAHP;AAAA;AAAA;AAAA;AAAA;AADF,WAAqCD,KAArC;AAAA;AAAA;AAAA;AAAA;AAoCA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDY;AAmDF;AACD,OA7DA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAkEE;AAAA,6BACE;AAAA,kBAAaR;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyED,CA5ED;;KAAMF,S;AA8EN,eAAeA,SAAf","sourcesContent":["// import { SongTest } from \"./DataTes\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\n\nconst SongLyric = ({ title, lyric, songYouTube, favId }) => {\n  console.log(songYouTube,favId);\n  // const dispatch = useDispatch();\n  return (\n    <div>\n      <div>\n        {_.map(songYouTube[0].items, (item, index) => {\n          /* _.map(videoData.items, (item, index) => { */\n            /* {songYouTube[0].items.map((item, index) => { */\n             console.log(\"item\", item); \n            const { id = {}, snippet = {} } = item;\n            const {kind,videoId} = id;\n            const { thumbnails = {} } = snippet;\n            const { standard = {} } = thumbnails;\n            console.log(\"item id\", id);\n            return (\n              <div className=\"player-wrapper\" key={index}>\n                <ReactPlayer\n                  className=\"react-player\"\n                  controls\n                  key={id}\n                  url={`https://www.youtube.com/watch?v=${id}`}\n                  // url={songYouTube}\n                  width=\"30%\"\n                  height={standard.height}\n                  config={{\n                    youtube: {\n                      playerVars: { showinfo: 1, hl: \"en\" },\n                    },\n                    file: {\n                      tracks: [\n                        {\n                          kind: \"subtitles\",\n                          src: \"subs/subtitles.en.vtt\",\n                          srcLang: \"en\",\n                          default: true,\n                        },\n                        {\n                          kind: \"subtitles\",\n                          src: \"subs/subtitles.ja.vtt\",\n                          srcLang: \"ja\",\n                        },\n                        {\n                          kind: \"subtitles\",\n                          src: \"subs/subtitles.de.vtt\",\n                          srcLang: \"de\",\n                        },\n                      ],\n                    },\n                  }}\n                />\n              </div>\n              /* <li key={id}>\n              <a href={`https://www.youtube.com/watch?v=${id}`}>\n                <p>\n                  <img\n                    width={standard.width}\n                    height={standard.height}\n                    src={standard.url}\n                    alt={`${title} `}\n                  />\n                </p>\n                <h3>{title}</h3>\n              </a>\n            </li> */\n            );\n          /* }); */\n        })}\n      </div>\n      {/* <VideoSong song={SongTest} /> */}\n      <div>\n        <blockquote>{lyric}</blockquote>\n      </div>\n      {/* <YoutubePlayer /> */}\n    </div>\n  );\n};\n\nexport default SongLyric;\n"]},"metadata":{},"sourceType":"module"}