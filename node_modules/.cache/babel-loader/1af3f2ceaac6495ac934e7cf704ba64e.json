{"ast":null,"code":"var _jsxFileName = \"/Users/pipemv/Desktop/final-project/src/components/SongLyric.js\";\nimport { SongTest } from \"./DataTes\";\nimport ReactPlayer from \"react-player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongLyric = _ref => {\n  let {\n    title,\n    lyric\n  } = _ref;\n  // const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: SongTest.items.map(item => {\n        {\n          /* console.log(\"item\", item); */\n        }\n        const {\n          id,\n          snippet = {}\n        } = item;\n        const {\n          thumbnails = {}\n        } = snippet;\n        const {\n          standard = {}\n        } = thumbnails;\n        return /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          controls: true,\n          url: `https://www.youtube.com/watch?v=${id}`,\n          width: standard.width,\n          height: standard.height\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n        /* <li key={id}>\n          <a href={`https://www.youtube.com/watch?v=${id}`}>\n            <p>\n              <img\n                width={standard.width}\n                height={standard.height}\n                src={standard.url}\n                alt={`${title} `}\n              />\n            </p>\n            <h3>{title}</h3>\n          </a>\n        </li> */\n        ;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n        style: {\n          whiteSpace: \"pre-wrap\",\n          columnCount: \"3\"\n        },\n        children: lyric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SongLyric;\nexport default SongLyric;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongLyric\");","map":{"version":3,"sources":["/Users/pipemv/Desktop/final-project/src/components/SongLyric.js"],"names":["SongTest","ReactPlayer","SongLyric","title","lyric","items","map","item","id","snippet","thumbnails","standard","width","height","whiteSpace","columnCount"],"mappings":";AAAA,SAASA,QAAT,QAAyB,WAAzB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;AAEA,MAAMC,SAAS,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AACtC;AACA,sBACE;AAAA,4BACE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGH,QAAQ,CAACK,KAAT,CAAeC,GAAf,CAAoBC,IAAD,IAAU;AAC5B;AAAC;AAAiC;AAClC,cAAM;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,OAAO,GAAG;AAAhB,YAAuBF,IAA7B;AACA,cAAM;AAAEG,UAAAA,UAAU,GAAG;AAAf,YAAsBD,OAA5B;AACA,cAAM;AAAEE,UAAAA,QAAQ,GAAG;AAAb,YAAoBD,UAA1B;AAEA,4BACE,QAAC,WAAD;AACE,UAAA,QAAQ,MADV;AAGE,UAAA,GAAG,EAAG,mCAAkCF,EAAG,EAH7C;AAIE,UAAA,KAAK,EAAEG,QAAQ,CAACC,KAJlB;AAKE,UAAA,MAAM,EAAED,QAAQ,CAACE;AALnB,WAEOL,EAFP;AAAA;AAAA;AAAA;AAAA;AAOA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBU;AAsBD,OA5BA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAkCE;AAAA,6BACE;AAAY,QAAA,KAAK,EAAE;AAAEM,UAAAA,UAAU,EAAE,UAAd;AAA0BC,UAAAA,WAAW,EAAE;AAAvC,SAAnB;AAAA,kBACGX;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA7CD;;KAAMF,S;AA+CN,eAAeA,SAAf","sourcesContent":["import { SongTest } from \"./DataTes\";\nimport ReactPlayer from \"react-player\";\n\nconst SongLyric = ({ title, lyric }) => {\n  // const dispatch = useDispatch();\n  return (\n    <div>\n      <h3>{title}</h3>\n      <div>\n        {SongTest.items.map((item) => {\n          {/* console.log(\"item\", item); */}\n          const { id, snippet = {} } = item;\n          const { thumbnails = {} } = snippet;\n          const { standard = {} } = thumbnails;\n\n          return (\n            <ReactPlayer\n              controls\n              key={id}\n              url={`https://www.youtube.com/watch?v=${id}`}\n              width={standard.width}\n              height={standard.height}\n            />\n            /* <li key={id}>\n              <a href={`https://www.youtube.com/watch?v=${id}`}>\n                <p>\n                  <img\n                    width={standard.width}\n                    height={standard.height}\n                    src={standard.url}\n                    alt={`${title} `}\n                  />\n                </p>\n                <h3>{title}</h3>\n              </a>\n            </li> */\n          );\n        })}\n      </div>\n      {/* <VideoSong song={SongTest} /> */}\n      <div>\n        <blockquote style={{ whiteSpace: \"pre-wrap\", columnCount: \"3\" }}>\n          {lyric}\n        </blockquote>\n      </div>\n      {/* <YoutubePlayer /> */}\n    </div>\n  );\n};\n\nexport default SongLyric;\n"]},"metadata":{},"sourceType":"module"}