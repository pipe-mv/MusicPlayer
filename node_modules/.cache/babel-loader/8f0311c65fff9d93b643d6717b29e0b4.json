{"ast":null,"code":"var _jsxFileName = \"/Users/pipemv/Desktop/final-project/src/components/SongLyric.js\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongLyric = _ref => {\n  let {\n    title,\n    lyric,\n    songYouTube\n  } = _ref;\n  console.log(songYouTube, favId, youTubeId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: _.map(songYouTube.items, (item, index) => {\n        console.log(\"item\", item);\n        const {\n          id = {},\n          snippet = {}\n        } = item;\n        const {\n          videoId\n        } = id;\n        const {\n          thumbnails = {}\n        } = snippet;\n        const {\n          standard = {}\n        } = thumbnails;\n        console.log(\"item id\", videoId);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            className: \"react-player\",\n            controls: true,\n            url: `https://www.youtube.com/watch?v=${videoId}`,\n            width: \"30%\",\n            height: standard.height,\n            config: {\n              youtube: {\n                playerVars: {\n                  showinfo: 1,\n                  hl: \"en\"\n                }\n              },\n              file: {\n                tracks: [{\n                  kind: \"subtitles\",\n                  src: \"subs/subtitles.en.vtt\",\n                  srcLang: \"en\",\n                  default: true\n                }]\n              }\n            }\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n        children: lyric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SongLyric;\nexport default SongLyric;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongLyric\");","map":{"version":3,"sources":["/Users/pipemv/Desktop/final-project/src/components/SongLyric.js"],"names":["ReactPlayer","_","SongLyric","title","lyric","songYouTube","console","log","favId","youTubeId","map","items","item","index","id","snippet","videoId","thumbnails","standard","height","youtube","playerVars","showinfo","hl","file","tracks","kind","src","srcLang","default"],"mappings":";AACA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,SAAS,GAAG,QAAmC;AAAA,MAAlC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAkC;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ,EAAyBG,KAAzB,EAAgCC,SAAhC;AAGA,sBACE;AAAA,4BACE;AAAA,gBACGR,CAAC,CAACS,GAAF,CAAML,WAAW,CAACM,KAAlB,EAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzCP,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBK,IAApB;AACA,cAAM;AAAEE,UAAAA,EAAE,GAAG,EAAP;AAAWC,UAAAA,OAAO,GAAG;AAArB,YAA4BH,IAAlC;AACA,cAAM;AAAEI,UAAAA;AAAF,YAAcF,EAApB;AACA,cAAM;AAAEG,UAAAA,UAAU,GAAG;AAAf,YAAsBF,OAA5B;AACA,cAAM;AAAEG,UAAAA,QAAQ,GAAG;AAAb,YAAoBD,UAA1B;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,OAAvB;AACA,4BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,QAAQ,MAFV;AAIE,YAAA,GAAG,EAAG,mCAAkCA,OAAQ,EAJlD;AAKE,YAAA,KAAK,EAAC,KALR;AAME,YAAA,MAAM,EAAEE,QAAQ,CAACC,MANnB;AAOE,YAAA,MAAM,EAAE;AACNC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AAAEC,kBAAAA,QAAQ,EAAE,CAAZ;AAAeC,kBAAAA,EAAE,EAAE;AAAnB;AADL,eADH;AAINC,cAAAA,IAAI,EAAE;AACJC,gBAAAA,MAAM,EAAE,CACN;AACEC,kBAAAA,IAAI,EAAE,WADR;AAEEC,kBAAAA,GAAG,EAAE,uBAFP;AAGEC,kBAAAA,OAAO,EAAE,IAHX;AAIEC,kBAAAA,OAAO,EAAE;AAJX,iBADM;AADJ;AAJA;AAPV,aAGOf,EAHP;AAAA;AAAA;AAAA;AAAA;AADF,WAAqCD,KAArC;AAAA;AAAA;AAAA;AAAA,gBADF;AA2BD,OAlCA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAsCE;AAAA,6BACE;AAAA,kBAAaT;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CAhDD;;KAAMF,S;AAkDN,eAAeA,SAAf","sourcesContent":["\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\n\nconst SongLyric = ({ title, lyric, songYouTube }) => {\n  console.log(songYouTube, favId, youTubeId);\n\n \n  return (\n    <div>\n      <div>\n        {_.map(songYouTube.items, (item, index) => {\n          console.log(\"item\", item);\n          const { id = {}, snippet = {} } = item;\n          const { videoId } = id;\n          const { thumbnails = {} } = snippet;\n          const { standard = {} } = thumbnails;\n          console.log(\"item id\", videoId);\n          return (\n            <div className=\"player-wrapper\" key={index}>\n              <ReactPlayer\n                className=\"react-player\"\n                controls\n                key={id}\n                url={`https://www.youtube.com/watch?v=${videoId}`}\n                width=\"30%\"\n                height={standard.height}\n                config={{\n                  youtube: {\n                    playerVars: { showinfo: 1, hl: \"en\" },\n                  },\n                  file: {\n                    tracks: [\n                      {\n                        kind: \"subtitles\",\n                        src: \"subs/subtitles.en.vtt\",\n                        srcLang: \"en\",\n                        default: true,\n                      },\n                    ],\n                  },\n                }}\n              />\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        <blockquote>{lyric}</blockquote>\n      </div>\n    </div>\n  );\n};\n\nexport default SongLyric;\n"]},"metadata":{},"sourceType":"module"}